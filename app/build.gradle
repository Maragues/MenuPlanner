buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.6.1'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

repositories {
    maven { url "https://jitpack.io" }
}

Properties firebaseProperties = new Properties()
firebaseProperties.load(project.rootProject.file('firebase.properties').newDataInputStream())
def firebaseServerId = firebaseProperties.getProperty('firebase.serverId')

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.maragues.menu_planner"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "SERVER_CIENT_ID", '"' + firebaseServerId + '"'

        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.android.support:support-v4:' + rootProject.ext.supportLibVersion
    compile 'com.android.support:appcompat-v7:' + rootProject.ext.supportLibVersion
    compile 'com.android.support:design:' + rootProject.ext.supportLibVersion
    compile 'com.android.support:cardview-v7:' + rootProject.ext.supportLibVersion

    compile 'com.firebaseui:firebase-ui-database:2.0.1'
    compile 'com.google.firebase:firebase-database:' + rootProject.ext.playServicesVersion
    compile 'com.google.firebase:firebase-auth:' + rootProject.ext.playServicesVersion
    compile 'com.google.firebase:firebase-invites:' + rootProject.ext.playServicesVersion
    compile 'com.google.android.gms:play-services-auth:' + rootProject.ext.playServicesVersion

    compile 'com.android.support.constraint:constraint-layout:1.1.0-beta1'

    compile 'com.github.quivr:android-week-view:2.0.2'

    compile "com.jakewharton.threetenabp:threetenabp:1.0.5"
    provided "com.jakewharton.threetenabp:threetenabp:1.0.5"
    //for unit test we want the real threeten version, not the one adapted to android
    testCompile('org.threeten:threetenbp:1.3.3') {
        exclude group: 'com.jakewharton.threetenabp'
    }

    compile 'com.jakewharton:butterknife:8.6.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.6.0'

    compile 'com.google.dagger:dagger:'+rootProject.ext.daggerVersion
    annotationProcessor 'com.google.dagger:dagger-compiler:'+rootProject.ext.daggerVersion
    androidTestAnnotationProcessor 'com.google.dagger:dagger-compiler:'+rootProject.ext.daggerVersion
    testAnnotationProcessor 'com.google.dagger:dagger-compiler:'+rootProject.ext.daggerVersion

    compile 'io.reactivex.rxjava2:rxjava:2.1.0'

    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'

    provided 'com.google.auto.value:auto-value:1.4.1'
    annotationProcessor 'com.google.auto.value:auto-value:1.4.1'
    annotationProcessor 'com.gabrielittner.auto.value:auto-value-with:1.0.0'
    annotationProcessor 'com.ryanharter.auto.value:auto-value-parcel:0.2.5'
//    compile 'com.ryanharter.auto.value:auto-value-parcel-adapter:0.2.5'
    annotationProcessor 'me.mattlogan.auto.value:auto-value-firebase:'+rootProject.ext.autoValueFirebase
    provided 'me.mattlogan.auto.value:auto-value-firebase-annotation:'+rootProject.ext.autoValueFirebase
    compile 'me.mattlogan.auto.value:auto-value-firebase-adapter:'+rootProject.ext.autoValueFirebase
    provided 'javax.annotation:jsr250-api:1.0'

    compile 'com.github.frangsierra:rx2firebase:1.1.3'

    def thirtyinchVersion = '0.8.0'
    // MVP for activity and fragment
    compile "net.grandcentrix.thirtyinch:thirtyinch:$thirtyinchVersion"

    // test extension
    testCompile "net.grandcentrix.thirtyinch:thirtyinch-test:$thirtyinchVersion"

    debugCompile('com.squareup.leakcanary:leakcanary-android:' + rootProject.ext.leakCanaryVersion)
    releaseCompile('com.squareup.leakcanary:leakcanary-android-no-op:' + rootProject.ext.leakCanaryVersion)
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:' + rootProject.ext.leakCanaryVersion
    androidTestCompile 'com.squareup.leakcanary:leakcanary-android-no-op:' + rootProject.ext.leakCanaryVersion

    testCompile 'junit:junit:' + rootProject.ext.junitVersion

    testCompile "org.mockito:mockito-core:" + rootProject.ext.mockitoVersion
    androidTestCompile "org.mockito:mockito-core:" + rootProject.ext.mockitoVersion
//    testCompile "org.mockito:mockito-android:" + rootProject.ext.mockitoVersion //this doesn't work, 20/1/2017

    androidTestCompile 'com.android.support:support-annotations:' + rootProject.ext.supportLibVersion
    androidTestCompile 'com.android.support.test:runner:' + rootProject.ext.runnerVersion
    androidTestCompile 'com.android.support.test:rules:' + rootProject.ext.rulesVersion
    androidTestCompile('com.android.support.test.espresso:espresso-core:' + rootProject.ext.espressoVersion) {
        exclude group: 'com.android.support'
    }

    androidTestCompile('com.android.support.test.espresso:espresso-intents:' + rootProject.ext.espressoVersion) {
        exclude group: 'com.android.support'
    }

    androidTestCompile('com.android.support.test.espresso:espresso-contrib:' + rootProject.ext.espressoVersion) {
        exclude group: 'com.android.support'
    }
}

apply plugin: 'com.google.gms.google-services'